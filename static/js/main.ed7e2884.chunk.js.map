{"version":3,"sources":["components/Contacts/contacts.module.css","container.module.css","components/Filter/filter.module.css","redux/phonebook-actions.js","service/contacts-api.js","redux/phonebook-operations.js","redux/phonebook-selectors.js","components/Form/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","redux/phonebook-reducer.js","redux/store.js","index.js","components/Form/form.module.css"],"names":["module","exports","actions","addContact","createAction","payload","id","name","number","deleteContact","changeFilter","fetchContacts","a","axios","get","data","postContacts","contact","post","deleteContacts","contactId","delete","defaults","baseURL","createAsyncThunk","contactsAPI","contacts","console","log","getContacts","state","getFilter","filter","Form","option","useState","setName","setNumber","dispatch","useDispatch","inputId","uuidv4","handleChange","evt","currentTarget","value","onSubmit","preventDefault","newContact","contactActions","contactsOperations","autoComplete","className","styles","phoneBookForm","htmlFor","formLabel","formInput","type","placeholder","onChange","pattern","title","required","formBtn","Contacts","useSelector","contactsSelectors","items","list","filteredContacts","useEffect","map","listItem","contactName","contactBtn","onClick","normalizedFilter","toLowerCase","includes","Filter","filterLabel","filterInput","e","App","container","contactList","createReducer","fulfilled","_","action","isLoading","pending","rejected","error","combineReducers","store","configureStore","reducer","contactsReducer","middlware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed7e2884.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contacts_list__1Fxky\",\"listItem\":\"contacts_listItem__6dTcu\",\"contactName\":\"contacts_contactName__3eY5M\",\"contactBtn\":\"contacts_contactBtn__1bGSx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__1G8v8\",\"contactList\":\"container_contactList__1Ohj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"filter_filterLabel__2Wa_j\",\"filterInput\":\"filter_filterInput__1dH24\"};","import { createAction } from '@reduxjs/toolkit';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('contacts/add', ({ id, name, number }) => ({\r\n    payload: {\r\n        id,\r\n        name,\r\n        number,\r\n    },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst actions = {\r\n    addContact,\r\n    deleteContact,\r\n    changeFilter,\r\n};\r\n\r\nexport default actions;","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4004';\r\n\r\nexport async function fetchContacts() {\r\n    const { data } = await axios.get('/contacts');\r\n    return data;\r\n}\r\n\r\nexport async function postContacts(contact) {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    return data;\r\n}\r\n\r\nexport async function deleteContacts(contactId) {\r\n    const { data } = await axios.delete(`/contacts/${contactId}`);\r\n    return data;\r\n}","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as contactsAPI from '../service/contacts-api';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n    'user/fetchContacts',\r\n    async () => {\r\n        const contacts = await contactsAPI.fetchContacts();\r\n        return contacts;\r\n});\r\n\r\nexport const postContacts = createAsyncThunk(\r\n    'user/postContacts',\r\n    async contact => {\r\n        try {\r\n            const data = await contactsAPI.postContacts(contact);\r\n            return data;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }      \r\n});\r\n\r\nexport const deleteContacts = createAsyncThunk(\r\n    'user/deleteContacts',\r\n    async contactId => {\r\n        try {\r\n            const data = await contactsAPI.deleteContacts(contactId);\r\n            return data;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }      \r\n});","export const getContacts = state => state.contacts;\r\n\r\nexport const getFilter = state => state.contacts.filter;","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport contactActions from '../../redux/phonebook-actions';\r\nimport { contactsOperations } from '../../redux';\r\nimport styles from './form.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function Form({ option }) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const inputId = uuidv4();\r\n\r\n    const handleSubmit = evt => {\r\n        evt.preventDefault();\r\n        const id = uuidv4();\r\n        const newContact = { id, name, number };\r\n\r\n        dispatch(contactActions.addContact(newContact));\r\n        dispatch(contactsOperations.postContacts(newContact));\r\n\r\n        setName('');\r\n        setNumber('');      \r\n    }\r\n\r\n    const handleChange = evt => {\r\n        const { name, value } = evt.currentTarget;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            \r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            \r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>{option}</h1>\r\n        \r\n        <form onSubmit={handleSubmit}  autoComplete=\"off\" className={styles.phoneBookForm}>\r\n            <label htmlFor={inputId} className={styles.formLabel}>Name</label>\r\n                <input\r\n                    className={styles.formInput}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter full name\"\r\n                    id={inputId}\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                />\r\n            <label htmlFor={inputId} className={styles.formLabel}>Number</label>\r\n                <input\r\n                    className={styles.formInput}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    placeholder=\"Enter number\"\r\n                    id={inputId}\r\n                    value={number}\r\n                    onChange={handleChange}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                />\r\n            \r\n          <button type=\"submit\" className={styles.formBtn}>Add contact</button>          \r\n        </form>\r\n        </>\r\n    );    \r\n};","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { contactsOperations, contactsSelectors } from '../../redux';\r\nimport actions from '../../redux/phonebook-actions';\r\nimport styles from './contacts.module.css'\r\n\r\nexport default function Contacts() {\r\n    const dispatch = useDispatch();\r\n    const { items, filter } = useSelector(contactsSelectors.getContacts);\r\n    const list = filteredContacts(items, filter);\r\n\r\n    console.log(items);\r\n\r\n    useEffect(() => {\r\n        dispatch(contactsOperations.fetchContacts())\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <ul className={styles.list}>\r\n                {list.map(({ number, name, id }) => (\r\n                    <li key={number} className={styles.listItem}>\r\n                        <p className={styles.contactName}>{name}: {number}</p>\r\n                        <button\r\n                            className={styles.contactBtn}\r\n                            onClick={() => {\r\n                                dispatch(contactsOperations.deleteContacts(id));\r\n                                dispatch(actions.deleteContact(number));                                \r\n                            }}\r\n                        >Delete\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </>\r\n    )\r\n};\r\n\r\nconst filteredContacts = (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    \r\n    return contacts.filter(({ name }) =>\r\n        name.toLowerCase().includes(normalizedFilter));    \r\n};","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsSelectors } from '../../redux';\r\nimport actions from '../../redux/phonebook-actions';\r\nimport styles from './filter.module.css'\r\n\r\nexport default function Filter() {\r\n    const value = useSelector(contactsSelectors.getFilter);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <label htmlFor=\"filter\" className={styles.filterLabel}>Find contacts by name\r\n            <input\r\n                className={styles.filterInput}\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={(e) => dispatch(actions.changeFilter(e.currentTarget.value))}\r\n                id=\"filter\"\r\n            />\r\n        </label>\r\n    )\r\n};","import styles from './container.module.css'\n\nimport Form from './components/Form/Form';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  return (\n    <div className={styles.container}>\n      <Form option=\"Phonebook\"/>\n    \n      <h2 className={styles.contactList}>Contacts</h2>\n    \n      <Filter/>    \n      <Contacts/>\n    </div>\n  );\n}","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { fetchContacts } from './phonebook-operations';\r\nimport actions from './phonebook-actions';\r\n\r\n// const INITIAL_STATE = [\r\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' }\r\n// ];\r\n\r\nconst items = createReducer([], {\r\n    [actions.addContact]: (state, { payload }) => [...state, payload],\r\n    [actions.deleteContact]: (state, { payload }) =>\r\n        state.filter(({ number }) => number !== payload),\r\n    [fetchContacts.fulfilled]: (_, action) => action.payload,\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n    [fetchContacts.pending]: () => true,\r\n    [fetchContacts.fulfilled]: () => true,\r\n    [fetchContacts.rejected]: () => true,\r\n})\r\n\r\nconst error = createReducer(null, {\r\n    [fetchContacts.rejected]: (_, action) => action.payload,\r\n    [fetchContacts.pending]: () => null,\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    isLoading,\r\n    error,\r\n})","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER\r\n} from \"redux-persist\";\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './phonebook-reducer';\r\n\r\nconst middlware = (getDefaultMiddleware) => getDefaultMiddleware({\r\n    serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n    }\r\n}).concat(logger);\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactsReducer,\r\n    },\r\n    middlware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>          \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBookForm\":\"form_phoneBookForm__21fDQ\",\"formLabel\":\"form_formLabel__2DSpg\",\"formInput\":\"form_formInput__2p-oT\",\"formBtn\":\"form_formBtn__3Nq4X\"};"],"sourceRoot":""}
{"version":3,"sources":["components/Contacts/contacts.module.css","container.module.css","components/Filter/filter.module.css","redux/phonebook-actions.js","components/Form/Form.js","service/contacts-api.js","redux/phonebook-operations.js","redux/phonebook-selectors.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","redux/phonebook-reducer.js","redux/store.js","index.js","components/Form/form.module.css"],"names":["module","exports","actions","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","Form","option","useState","setName","setNumber","dispatch","useDispatch","inputId","handleChange","evt","currentTarget","value","onSubmit","preventDefault","contactActions","autoComplete","className","styles","phoneBookForm","htmlFor","formLabel","formInput","type","placeholder","onChange","pattern","title","required","formBtn","fetchContacts","a","axios","get","data","defaults","baseURL","createAsyncThunk","contactsAPI","contacts","getContacts","state","getFilter","filter","Contacts","useSelector","contactsSelectors","items","list","filteredContacts","useEffect","contactsOperations","map","listItem","contactName","contactBtn","onClick","normalizedFilter","toLowerCase","includes","Filter","filterLabel","filterInput","e","App","container","contactList","createReducer","fulfilled","_","action","isLoading","pending","rejected","error","combineReducers","store","configureStore","reducer","contactsReducer","middlware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7aa3d61e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contacts_list__1Fxky\",\"listItem\":\"contacts_listItem__6dTcu\",\"contactName\":\"contacts_contactName__3eY5M\",\"contactBtn\":\"contacts_contactBtn__1bGSx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__1G8v8\",\"contactList\":\"container_contactList__1Ohj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"filter_filterLabel__2Wa_j\",\"filterInput\":\"filter_filterInput__1dH24\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\r\n    payload: {\r\n        id: uuidv4(),\r\n        name,\r\n        number,\r\n    },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst actions = {\r\n    addContact,\r\n    deleteContact,\r\n    changeFilter,\r\n};\r\n\r\nexport default actions;","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport contactActions from '../../redux/phonebook-actions';\r\nimport styles from './form.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function Form({ option }) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const inputId = uuidv4();\r\n\r\n    const handleSubmit = evt => {\r\n        evt.preventDefault();\r\n\r\n        dispatch(contactActions.addContact({ name, number }));\r\n\r\n        setName('');\r\n        setNumber('');      \r\n    }\r\n\r\n    const handleChange = evt => {\r\n        const { name, value } = evt.currentTarget;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            \r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            \r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>{option}</h1>\r\n        \r\n        <form onSubmit={handleSubmit}  autoComplete=\"off\" className={styles.phoneBookForm}>\r\n            <label htmlFor={inputId} className={styles.formLabel}>Name</label>\r\n                <input\r\n                    className={styles.formInput}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter full name\"\r\n                    id={inputId}\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                />\r\n            <label htmlFor={inputId} className={styles.formLabel}>Number</label>\r\n                <input\r\n                    className={styles.formInput}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    placeholder=\"Enter number\"\r\n                    id={inputId}\r\n                    value={number}\r\n                    onChange={handleChange}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                />\r\n            \r\n          <button type=\"submit\" className={styles.formBtn}>Add contact</button>          \r\n        </form>\r\n        </>\r\n    );    \r\n};","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4004';\r\n\r\nexport async function fetchContacts() {\r\n    const { data } = await axios.get('/contacts');\r\n    return data;\r\n}","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as contactsAPI from '../service/contacts-api';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n    'users/fetchContacts',\r\n    async () => {\r\n        const contacts = await contactsAPI.fetchContacts();\r\n        return contacts;\r\n});","export const getContacts = state => state.contacts;\r\n\r\nexport const getFilter = state => state.contacts.filter;","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { contactsOperations, contactsSelectors } from '../../redux';\r\nimport actions from '../../redux/phonebook-actions';\r\nimport styles from './contacts.module.css'\r\n\r\nexport default function Contacts() {\r\n    const dispatch = useDispatch();\r\n    const { items, filter } = useSelector(contactsSelectors.getContacts);\r\n    const list = filteredContacts(items, filter);\r\n\r\n    useEffect(() => {\r\n        dispatch(contactsOperations.fetchContacts())\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <ul className={styles.list}>\r\n                {list.map(({ number, name }) => (\r\n                    <li key={number} className={styles.listItem}>\r\n                        <p className={styles.contactName}>{name}: {number}</p>\r\n                        <button\r\n                            className={styles.contactBtn}\r\n                            onClick={() => dispatch(actions.deleteContact(number))}\r\n                        >Delete\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </>\r\n    )\r\n};\r\n\r\nconst filteredContacts = (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    \r\n    return contacts.filter(({ name }) =>\r\n        name.toLowerCase().includes(normalizedFilter));    \r\n};","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsSelectors } from '../../redux';\r\nimport actions from '../../redux/phonebook-actions';\r\nimport styles from './filter.module.css'\r\n\r\nexport default function Filter() {\r\n    const value = useSelector(contactsSelectors.getFilter);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <label htmlFor=\"filter\" className={styles.filterLabel}>Find contacts by name\r\n            <input\r\n                className={styles.filterInput}\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={(e) => dispatch(actions.changeFilter(e.currentTarget.value))}\r\n                id=\"filter\"\r\n            />\r\n        </label>\r\n    )\r\n};","import styles from './container.module.css'\n\nimport Form from './components/Form/Form';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  return (\n    <div className={styles.container}>\n      <Form option=\"Phonebook\"/>\n    \n      <h2 className={styles.contactList}>Contacts</h2>\n    \n      <Filter/>    \n      <Contacts/>\n    </div>\n  );\n}","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { fetchContacts } from './phonebook-operations';\r\nimport actions from './phonebook-actions';\r\n\r\n// const INITIAL_STATE = [\r\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' }\r\n// ];\r\n\r\nconst items = createReducer([], {\r\n    [actions.addContact]: (state, { payload }) => [...state, payload],\r\n    [actions.deleteContact]: (state, { payload }) =>\r\n        state.filter(({ number }) => number !== payload),\r\n    [fetchContacts.fulfilled]: (_, action) => action.payload,\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n    [fetchContacts.pending]: () => true,\r\n    [fetchContacts.fulfilled]: () => true,\r\n    [fetchContacts.rejected]: () => true,\r\n})\r\n\r\nconst error = createReducer(null, {\r\n    [fetchContacts.rejected]: (_, action) => action.payload,\r\n    [fetchContacts.pending]: () => null,\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    isLoading,\r\n    error,\r\n})","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER\r\n} from \"redux-persist\";\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './phonebook-reducer';\r\n\r\nconst middlware = (getDefaultMiddleware) => getDefaultMiddleware({\r\n    serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n    }\r\n}).concat(logger);\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactsReducer,\r\n    },\r\n    middlware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>          \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBookForm\":\"form_phoneBookForm__21fDQ\",\"formLabel\":\"form_formLabel__2DSpg\",\"formInput\":\"form_formInput__2p-oT\",\"formBtn\":\"form_formBtn__3Nq4X\"};"],"sourceRoot":""}